// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modal.Repository.Data;

#nullable disable

namespace Modal.Repository.Data.Migrations
{
    [DbContext(typeof(ModalContext))]
    partial class ModalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Modal.Domain.Models.Brand", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Brands", "Common");

                    b.HasData(
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Starbucks"
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b902"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Costa"
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b903"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Cilantro"
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b904"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "TBS"
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b905"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "On The Run"
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b906"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Caribou"
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b907"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Krispy Kreme"
                        });
                });

            modelBuilder.Entity("Modal.Domain.Models.Category", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Categories", "Common");

                    b.HasData(
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Frappuccino"
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b902"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Latte"
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b903"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Mocha"
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b904"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Macchiato"
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b905"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Cake"
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b906"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Donuts"
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b907"),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Salad"
                        });
                });

            modelBuilder.Entity("Modal.Domain.Models.Product", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products", "Product");

                    b.HasData(
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6777),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Double Caramel Frappuccino",
                            PictureURL = "images/products/sb-ang1.png",
                            Price = 200m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b902"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6813),
                            Description = "Nunc viverra imperdiet enim. Fusce est. Vivamus a tellus.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "White Chocolate Mocha Frappuccino",
                            PictureURL = "images/products/sb-ang2.png",
                            Price = 150m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b903"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b902"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6817),
                            Description = "Suspendisse dui purus, scelerisque at, vulputate vitae, pretium mattis, nunc. Mauris eget neque at sem venenatis eleifend. Ut nonummy.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Iced Cafe Latte",
                            PictureURL = "images/products/sb-core1.png",
                            Price = 180m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b904"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b902"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b903"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6820),
                            Description = "Suspendisse dui purus, scelerisque at, vulputate vitae, pretium mattis, nunc.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "White Chocolate Mocha",
                            PictureURL = "images/products/sb-core2.png",
                            Price = 300m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b905"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b904"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6824),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Iced Caramel Macchiato",
                            PictureURL = "images/products/sb-react1.png",
                            Price = 300m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b906"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b905"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b904"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6827),
                            Description = "Aenean nec lorem. In porttitor. Donec laoreet nonummy augue.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hot Caramel Macchiato",
                            PictureURL = "images/products/sb-ts1.png",
                            Price = 120m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b907"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b902"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b905"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6830),
                            Description = "Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Iced Matcha Latte",
                            PictureURL = "images/products/hat-core1.png",
                            Price = 10m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b908"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b906"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6835),
                            Description = "Suspendisse dui purus, scelerisque at, vulputate vitae, pretium mattis, nunc. Mauris eget neque at sem venenatis eleifend. Ut nonummy.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Honey Cake",
                            PictureURL = "images/products/hat-react1.png",
                            Price = 8m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b909"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b906"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6840),
                            Description = "Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Blueberry Cheesecake",
                            PictureURL = "images/products/hat-react2.png",
                            Price = 15m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b910"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b903"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b907"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6844),
                            Description = "Nunc viverra imperdiet enim. Fusce est. Vivamus a tellus.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Glazed Donuts",
                            PictureURL = "images/products/glove-code1.png",
                            Price = 18m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b911"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b907"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6880),
                            Description = "Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin pharetra nonummy pede. Mauris et orci.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Greek Salad",
                            PictureURL = "images/products/glove-code2.png",
                            Price = 15m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b912"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b904"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b904"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6885),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Purple React Gloves",
                            PictureURL = "images/products/glove-react1.png",
                            Price = 16m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b913"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b904"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b904"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6888),
                            Description = "Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin pharetra nonummy pede. Mauris et orci.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Green React Gloves",
                            PictureURL = "images/products/glove-react2.png",
                            Price = 14m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b914"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b906"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b903"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6892),
                            Description = "Suspendisse dui purus, scelerisque at, vulputate vitae, pretium mattis, nunc. Mauris eget neque at sem venenatis eleifend. Ut nonummy.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Redis Red Boots",
                            PictureURL = "images/products/boot-redis1.png",
                            Price = 250m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b915"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b902"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b903"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6895),
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Core Red Boots",
                            PictureURL = "images/products/boot-core2.png",
                            Price = 189m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b916"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b902"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b903"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6899),
                            Description = "Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin pharetra nonummy pede. Mauris et orci.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Core Purple Boots",
                            PictureURL = "images/products/boot-core1.png",
                            Price = 199m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b917"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b903"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6903),
                            Description = "Aenean nec lorem. In porttitor. Donec laoreet nonummy augue.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Angular Purple Boots",
                            PictureURL = "images/products/boot-ang2.png",
                            Price = 150m
                        },
                        new
                        {
                            ID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b918"),
                            BrandID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b901"),
                            CategoryID = new Guid("f06c3c8d-b2c2-4cc6-9a1a-8b3b3c82b903"),
                            CreatedDate = new DateTime(2024, 8, 22, 11, 28, 35, 157, DateTimeKind.Local).AddTicks(6906),
                            Description = "Suspendisse dui purus, scelerisque at, vulputate vitae, pretium mattis, nunc. Mauris eget neque at sem venenatis eleifend. Ut nonummy.",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Angular Blue Boots",
                            PictureURL = "images/products/boot-ang1.png",
                            Price = 180m
                        });
                });

            modelBuilder.Entity("Modal.Domain.Models.Product", b =>
                {
                    b.HasOne("Modal.Domain.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Modal.Domain.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
